<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<!-- add by xzh -->
		 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 						 	
<mapper namespace="com.huayu.etl.backend.dao.AppTableDao">
	<resultMap id="BaseResultMap" type="com.huayu.etl.backend.bo.AppTable">
	

		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="app_id" property="appId" jdbcType="BIGINT" />
		<result column="NAME" property="name" jdbcType="VARCHAR" />
		<result column="warehouse_name" property="warehouseName" jdbcType="VARCHAR" />
		<result column="partition_label" property="partitionLabel" jdbcType="TINYINT" />
		<result column="partition_ext" property="partitionExt" jdbcType="VARCHAR" />
		<result column="extract_type" property="extractType" jdbcType="TINYINT" />
		<result column="table_type" property="tableType" jdbcType="TINYINT" />
		<result column="exist_id_field" property="existIdField" jdbcType="TINYINT" />
		<result column="id_column_name" property="idColumnName" jdbcType="VARCHAR" />
		<result column="exist_create_date" property="existCreateDate" jdbcType="TINYINT" />
		<result column="create_date_column_name" property="createDateColumnName" jdbcType="VARCHAR" />
		<result column="exist_update_date" property="existUpdateDate" jdbcType="TINYINT" />
		<result column="update_date_column_name" property="updateDateColumnName" jdbcType="VARCHAR" />
		<result column="introduce" property="introduce" jdbcType="VARCHAR" />
		<result column="exist_update_extractor" property="existUpdateExtractor" jdbcType="TINYINT" />
		<result column="specify_update_condition" property="specifyUpdateCondition" jdbcType="VARCHAR" />
		<result column="exist_delete_extractor" property="existDeleteExtractor" jdbcType="TINYINT" />
		<result column="specify_delete_condition" property="specifyDeleteCondition" jdbcType="VARCHAR" />
		<result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
		<result column="create_date" property="createDate"  />
		<result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
		<result column="update_date" property="updateDate"  />

	</resultMap>
	<sql id="Base_Param_Condition">
	  		<if test="id != null">
		 	and id = #{id} 
		</if>
       		<if test="appId != null">
		 	and app_id = #{appId} 
		</if>
       		<if test="name != null">
		 	and NAME = #{name} 
		</if>
       		<if test="warehouseName != null">
		 	and warehouse_name = #{warehouseName} 
		</if>
       		<if test="partitionLabel != null">
		 	and partition_label = #{partitionLabel} 
		</if>
       		<if test="partitionExt != null">
		 	and partition_ext = #{partitionExt} 
		</if>
       		<if test="extractType != null">
		 	and extract_type = #{extractType} 
		</if>
       		<if test="tableType != null">
		 	and table_type = #{tableType} 
		</if>
       		<if test="existIdField != null">
		 	and exist_id_field = #{existIdField} 
		</if>
       		<if test="idColumnName != null">
		 	and id_column_name = #{idColumnName} 
		</if>
       		<if test="existCreateDate != null">
		 	and exist_create_date = #{existCreateDate} 
		</if>
       		<if test="createDateColumnName != null">
		 	and create_date_column_name = #{createDateColumnName} 
		</if>
       		<if test="existUpdateDate != null">
		 	and exist_update_date = #{existUpdateDate} 
		</if>
       		<if test="updateDateColumnName != null">
		 	and update_date_column_name = #{updateDateColumnName} 
		</if>
       		<if test="introduce != null">
		 	and introduce = #{introduce} 
		</if>
       		<if test="existUpdateExtractor != null">
		 	and exist_update_extractor = #{existUpdateExtractor} 
		</if>
       		<if test="specifyUpdateCondition != null">
		 	and specify_update_condition = #{specifyUpdateCondition} 
		</if>
       		<if test="existDeleteExtractor != null">
		 	and exist_delete_extractor = #{existDeleteExtractor} 
		</if>
       		<if test="specifyDeleteCondition != null">
		 	and specify_delete_condition = #{specifyDeleteCondition} 
		</if>
       		<if test="createUserId != null">
		 	and create_user_id = #{createUserId} 
		</if>
       		<if test="createDate != null">
		 	and create_date = #{createDate} 
		</if>
       		<if test="updateUserId != null">
		 	and update_user_id = #{updateUserId} 
		</if>
       		<if test="updateDate != null">
		 	and update_date = #{updateDate} 
		</if>
       	</sql>
	
   <sql id="Base_Condition">
   	<where>
		<include refid="Base_Param_Condition"></include>  	
   	</where>
   	<if test="orderBy != null">
        order by #{orderBy}
    </if>
        <if test="beginNum != null and offset != null">
            limit #{beginNum} , #{offset}
    </if>
   	
   </sql>

  <sql id="Base_Column_List">
	
	id, app_id, NAME, warehouse_name, partition_label, partition_ext, extract_type, table_type, exist_id_field, id_column_name, exist_create_date, create_date_column_name, exist_update_date, update_date_column_name, introduce, exist_update_extractor, specify_update_condition, exist_delete_extractor, specify_delete_condition, create_user_id, create_date, update_user_id, update_date 
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
    
	
    select 
    <include refid="Base_Column_List" />
    from tb_app_table
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    
	
    select 
    <include refid="Base_Column_List" />
    from tb_app_table
  </select>
  
  <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Long">
    
 	select    
   	 <include refid="Base_Column_List" />
   	from tb_app_table
   	<where>
		<include refid="Base_Param_Condition"></include>  
  	</where>
  </select>
  
  <select id="selectByCondition" resultMap="BaseResultMap" parameterType="java.lang.Long">
    
 	select    
   	 <include refid="Base_Column_List" />
   	from tb_app_table
	 <include refid="Base_Condition" />
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
	
   
    delete from tb_app_table
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <insert id="insert" parameterType="com.huayu.etl.backend.bo.AppTable" useGeneratedKeys="true" keyProperty="id">
	
    <![CDATA[
    insert into tb_user (
    	id, app_id, NAME, warehouse_name, partition_label, partition_ext, extract_type, table_type, exist_id_field, id_column_name, exist_create_date, create_date_column_name, exist_update_date, update_date_column_name, introduce, exist_update_extractor, specify_update_condition, exist_delete_extractor, specify_delete_condition, create_user_id, create_date, update_user_id, update_date 
	)
    values (
    	#{id ,jdbcType=BIGINT} , #{appId ,jdbcType=BIGINT} , #{name ,jdbcType=VARCHAR} , #{warehouseName ,jdbcType=VARCHAR} , #{partitionLabel ,jdbcType=TINYINT} , #{partitionExt ,jdbcType=VARCHAR} , #{extractType ,jdbcType=TINYINT} , #{tableType ,jdbcType=TINYINT} , #{existIdField ,jdbcType=TINYINT} , #{idColumnName ,jdbcType=VARCHAR} , #{existCreateDate ,jdbcType=TINYINT} , #{createDateColumnName ,jdbcType=VARCHAR} , #{existUpdateDate ,jdbcType=TINYINT} , #{updateDateColumnName ,jdbcType=VARCHAR} , #{introduce ,jdbcType=VARCHAR} , #{existUpdateExtractor ,jdbcType=TINYINT} , #{specifyUpdateCondition ,jdbcType=VARCHAR} , #{existDeleteExtractor ,jdbcType=TINYINT} , #{specifyDeleteCondition ,jdbcType=VARCHAR} , #{createUserId ,jdbcType=BIGINT}, #{createDate} , #{updateUserId ,jdbcType=BIGINT}, #{updateDate}
    ]]>
	
  </insert>
  
  <insert id="insertSelective" parameterType="com.huayu.etl.backend.bo.AppTable" useGeneratedKeys="true" keyProperty="id">
	
    
	insert into tb_app_table
    <trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="id != null">
			id ,
		</if>
		<if test="appId != null">
			app_id ,
		</if>
		<if test="name != null">
			NAME ,
		</if>
		<if test="warehouseName != null">
			warehouse_name ,
		</if>
		<if test="partitionLabel != null">
			partition_label ,
		</if>
		<if test="partitionExt != null">
			partition_ext ,
		</if>
		<if test="extractType != null">
			extract_type ,
		</if>
		<if test="tableType != null">
			table_type ,
		</if>
		<if test="existIdField != null">
			exist_id_field ,
		</if>
		<if test="idColumnName != null">
			id_column_name ,
		</if>
		<if test="existCreateDate != null">
			exist_create_date ,
		</if>
		<if test="createDateColumnName != null">
			create_date_column_name ,
		</if>
		<if test="existUpdateDate != null">
			exist_update_date ,
		</if>
		<if test="updateDateColumnName != null">
			update_date_column_name ,
		</if>
		<if test="introduce != null">
			introduce ,
		</if>
		<if test="existUpdateExtractor != null">
			exist_update_extractor ,
		</if>
		<if test="specifyUpdateCondition != null">
			specify_update_condition ,
		</if>
		<if test="existDeleteExtractor != null">
			exist_delete_extractor ,
		</if>
		<if test="specifyDeleteCondition != null">
			specify_delete_condition ,
		</if>
		<if test="createUserId != null">
			create_user_id ,
		</if>
		<if test="createDate != null">
			create_date ,
		</if>
		<if test="updateUserId != null">
			update_user_id ,
		</if>
		<if test="updateDate != null">
			update_date ,
		</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="id != null">
				#{id ,jdbcType= BIGINT} ,
				</if>
		<if test="appId != null">
				#{appId ,jdbcType= BIGINT} ,
				</if>
		<if test="name != null">
				#{name ,jdbcType= VARCHAR} ,
				</if>
		<if test="warehouseName != null">
				#{warehouseName ,jdbcType= VARCHAR} ,
				</if>
		<if test="partitionLabel != null">
				#{partitionLabel ,jdbcType= TINYINT} ,
				</if>
		<if test="partitionExt != null">
				#{partitionExt ,jdbcType= VARCHAR} ,
				</if>
		<if test="extractType != null">
				#{extractType ,jdbcType= TINYINT} ,
				</if>
		<if test="tableType != null">
				#{tableType ,jdbcType= TINYINT} ,
				</if>
		<if test="existIdField != null">
				#{existIdField ,jdbcType= TINYINT} ,
				</if>
		<if test="idColumnName != null">
				#{idColumnName ,jdbcType= VARCHAR} ,
				</if>
		<if test="existCreateDate != null">
				#{existCreateDate ,jdbcType= TINYINT} ,
				</if>
		<if test="createDateColumnName != null">
				#{createDateColumnName ,jdbcType= VARCHAR} ,
				</if>
		<if test="existUpdateDate != null">
				#{existUpdateDate ,jdbcType= TINYINT} ,
				</if>
		<if test="updateDateColumnName != null">
				#{updateDateColumnName ,jdbcType= VARCHAR} ,
				</if>
		<if test="introduce != null">
				#{introduce ,jdbcType= VARCHAR} ,
				</if>
		<if test="existUpdateExtractor != null">
				#{existUpdateExtractor ,jdbcType= TINYINT} ,
				</if>
		<if test="specifyUpdateCondition != null">
				#{specifyUpdateCondition ,jdbcType= VARCHAR} ,
				</if>
		<if test="existDeleteExtractor != null">
				#{existDeleteExtractor ,jdbcType= TINYINT} ,
				</if>
		<if test="specifyDeleteCondition != null">
				#{specifyDeleteCondition ,jdbcType= VARCHAR} ,
				</if>
		<if test="createUserId != null">
				#{createUserId ,jdbcType= BIGINT} ,
				</if>
		<if test="createDate != null">
				#{createDate} , 
				</if>
		<if test="updateUserId != null">
				#{updateUserId ,jdbcType= BIGINT} ,
				</if>
		<if test="updateDate != null">
				#{updateDate} , 
				</if>
    </trim>
  </insert>
  
  <select id="count" resultType="java.lang.Long">
	
	
    select count(*) from tb_app_table
     <include refid="Base_Condition" />
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.huayu.etl.backend.bo.AppTable">
    
	
    update tb_app_table
    <set>
			<if test="id != null">
				id = #{id ,jdbcType= BIGINT} ,
				</if>
       		<if test="appId != null">
				app_id = #{appId ,jdbcType= BIGINT} ,
				</if>
       		<if test="name != null">
				NAME = #{name ,jdbcType= VARCHAR} ,
				</if>
       		<if test="warehouseName != null">
				warehouse_name = #{warehouseName ,jdbcType= VARCHAR} ,
				</if>
       		<if test="partitionLabel != null">
				partition_label = #{partitionLabel ,jdbcType= TINYINT} ,
				</if>
       		<if test="partitionExt != null">
				partition_ext = #{partitionExt ,jdbcType= VARCHAR} ,
				</if>
       		<if test="extractType != null">
				extract_type = #{extractType ,jdbcType= TINYINT} ,
				</if>
       		<if test="tableType != null">
				table_type = #{tableType ,jdbcType= TINYINT} ,
				</if>
       		<if test="existIdField != null">
				exist_id_field = #{existIdField ,jdbcType= TINYINT} ,
				</if>
       		<if test="idColumnName != null">
				id_column_name = #{idColumnName ,jdbcType= VARCHAR} ,
				</if>
       		<if test="existCreateDate != null">
				exist_create_date = #{existCreateDate ,jdbcType= TINYINT} ,
				</if>
       		<if test="createDateColumnName != null">
				create_date_column_name = #{createDateColumnName ,jdbcType= VARCHAR} ,
				</if>
       		<if test="existUpdateDate != null">
				exist_update_date = #{existUpdateDate ,jdbcType= TINYINT} ,
				</if>
       		<if test="updateDateColumnName != null">
				update_date_column_name = #{updateDateColumnName ,jdbcType= VARCHAR} ,
				</if>
       		<if test="introduce != null">
				introduce = #{introduce ,jdbcType= VARCHAR} ,
				</if>
       		<if test="existUpdateExtractor != null">
				exist_update_extractor = #{existUpdateExtractor ,jdbcType= TINYINT} ,
				</if>
       		<if test="specifyUpdateCondition != null">
				specify_update_condition = #{specifyUpdateCondition ,jdbcType= VARCHAR} ,
				</if>
       		<if test="existDeleteExtractor != null">
				exist_delete_extractor = #{existDeleteExtractor ,jdbcType= TINYINT} ,
				</if>
       		<if test="specifyDeleteCondition != null">
				specify_delete_condition = #{specifyDeleteCondition ,jdbcType= VARCHAR} ,
				</if>
       		<if test="createUserId != null">
				create_user_id = #{createUserId ,jdbcType= BIGINT} ,
				</if>
       		<if test="createDate != null">
				create_date = #{createDate} ,
				</if>
       		<if test="updateUserId != null">
				update_user_id = #{updateUserId ,jdbcType= BIGINT} ,
				</if>
       		<if test="updateDate != null">
				update_date = #{updateDate} ,
				</if>
       	</set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.huayu.etl.backend.bo.AppTable">
   
   
    update tb_app_table
	<trim prefix="set"  suffixOverrides=",">
					id = #{id ,jdbcType= BIGINT} ,
							app_id = #{appId ,jdbcType= BIGINT} ,
							NAME = #{name ,jdbcType= VARCHAR} ,
							warehouse_name = #{warehouseName ,jdbcType= VARCHAR} ,
							partition_label = #{partitionLabel ,jdbcType= TINYINT} ,
							partition_ext = #{partitionExt ,jdbcType= VARCHAR} ,
							extract_type = #{extractType ,jdbcType= TINYINT} ,
							table_type = #{tableType ,jdbcType= TINYINT} ,
							exist_id_field = #{existIdField ,jdbcType= TINYINT} ,
							id_column_name = #{idColumnName ,jdbcType= VARCHAR} ,
							exist_create_date = #{existCreateDate ,jdbcType= TINYINT} ,
							create_date_column_name = #{createDateColumnName ,jdbcType= VARCHAR} ,
							exist_update_date = #{existUpdateDate ,jdbcType= TINYINT} ,
							update_date_column_name = #{updateDateColumnName ,jdbcType= VARCHAR} ,
							introduce = #{introduce ,jdbcType= VARCHAR} ,
							exist_update_extractor = #{existUpdateExtractor ,jdbcType= TINYINT} ,
							specify_update_condition = #{specifyUpdateCondition ,jdbcType= VARCHAR} ,
							exist_delete_extractor = #{existDeleteExtractor ,jdbcType= TINYINT} ,
							specify_delete_condition = #{specifyDeleteCondition ,jdbcType= VARCHAR} ,
							create_user_id = #{createUserId ,jdbcType= BIGINT} ,
							create_date = #{createDate} ,  
							update_user_id = #{updateUserId ,jdbcType= BIGINT} ,
							update_date = #{updateDate} ,  
				</trim>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>